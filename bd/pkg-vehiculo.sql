create or replace PACKAGE PKG_VEHICULO AS 
  TYPE C_CURSOR IS REF CURSOR;

  PROCEDURE SP_LISTAR_POR_PLACA (
    P_C_CURSOR OUT C_CURSOR,
    P_PLACA IN VEHICULO.PLACA%TYPE
  );

  PROCEDURE SP_LISTAR_POR_ANO (
    P_C_CURSOR OUT C_CURSOR,
    P_ANO IN VEHICULO.ANO%TYPE
  );

  PROCEDURE SP_INSERTAR (
    P_CODIGO OUT VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE,
    P_MARCA IN VEHICULO.MARCA%TYPE,
    P_MODELO IN VEHICULO.MODELO%TYPE,
    P_ANO IN VEHICULO.ANO%TYPE
  );

  PROCEDURE SP_ACTUALIZAR (
    P_CODIGO IN VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE,
    P_MARCA IN VEHICULO.MARCA%TYPE,
    P_MODELO IN VEHICULO.MODELO%TYPE,
    P_ANO IN VEHICULO.ANO%TYPE
  );

  PROCEDURE SP_ELIMINAR (
    P_CODIGO IN VEHICULO.CODIGO%TYPE
  );
  
  PROCEDURE SP_VALIDAR_PLACA (
    P_NUM OUT INTEGER,
    P_CODIGO IN VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE
  );

END PKG_VEHICULO;

create or replace PACKAGE BODY PKG_VEHICULO AS 

  PROCEDURE SP_LISTAR_POR_PLACA (
    P_C_CURSOR OUT C_CURSOR,
    P_PLACA IN VEHICULO.PLACA%TYPE
  ) AS
  BEGIN
    OPEN P_C_CURSOR FOR
    SELECT
        CODIGO,
        PLACA,
        MARCA,
        MODELO,
        ANO,
        ESTADO
    FROM VEHICULO
    WHERE
        PLACA = P_PLACA AND
        ESTADO = '1';
  END SP_LISTAR_POR_PLACA;

  PROCEDURE SP_LISTAR_POR_ANO (
    P_C_CURSOR OUT C_CURSOR,
    P_ANO IN VEHICULO.ANO%TYPE
  ) AS
  BEGIN
    OPEN P_C_CURSOR FOR
    SELECT
        CODIGO,
        PLACA,
        MARCA,
        MODELO,
        ANO,
        ESTADO
    FROM VEHICULO
    WHERE
        ANO = P_ANO AND
        ESTADO = '1';
  END SP_LISTAR_POR_ANO;

  PROCEDURE SP_INSERTAR (
    P_CODIGO OUT VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE,
    P_MARCA IN VEHICULO.MARCA%TYPE,
    P_MODELO IN VEHICULO.MODELO%TYPE,
    P_ANO IN VEHICULO.ANO%TYPE
  ) AS
  BEGIN
    SELECT SEQ_VEHICULO.NEXTVAL INTO P_CODIGO FROM DUAL;

    INSERT INTO VEHICULO (
        CODIGO,
        PLACA,
        MARCA,
        MODELO,
        ANO
    ) 
    VALUES (
        P_CODIGO,
        P_PLACA,
        P_MARCA,
        P_MODELO,
        P_ANO
    );
  END SP_INSERTAR;

  PROCEDURE SP_ACTUALIZAR (
    P_CODIGO IN VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE,
    P_MARCA IN VEHICULO.MARCA%TYPE,
    P_MODELO IN VEHICULO.MODELO%TYPE,
    P_ANO IN VEHICULO.ANO%TYPE
  ) AS
  BEGIN
    UPDATE VEHICULO
    SET
        PLACA = P_PLACA,
        MARCA = P_MARCA,
        MODELO = P_MODELO,
        ANO = P_ANO
    WHERE CODIGO = P_CODIGO;
  END SP_ACTUALIZAR;

  PROCEDURE SP_ELIMINAR (
    P_CODIGO IN VEHICULO.CODIGO%TYPE
  ) AS
  BEGIN
    UPDATE VEHICULO
    SET
        ESTADO = '0'
    WHERE CODIGO = P_CODIGO;
  END SP_ELIMINAR;
  
  PROCEDURE SP_VALIDAR_PLACA (
    P_NUM OUT INTEGER,
    P_CODIGO IN VEHICULO.CODIGO%TYPE,
    P_PLACA IN VEHICULO.PLACA%TYPE
  ) AS
  BEGIN
    IF P_CODIGO > 0 THEN
        SELECT COUNT(*) INTO P_NUM
        FROM VEHICULO
        WHERE
            PLACA = P_PLACA AND
            CODIGO != P_CODIGO AND
            ESTADO = '1';
    
    ELSE
        SELECT COUNT(*) INTO P_NUM
        FROM VEHICULO
        WHERE
            PLACA = P_PLACA AND
            ESTADO = '1';
    END IF;
  END SP_VALIDAR_PLACA;

END PKG_VEHICULO;